'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _jestMatcherUtils = require('jest-matcher-utils');

var _predicate = require('./predicate');

var _predicate2 = _interopRequireDefault(_predicate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const passMessage = (firsTimestamps, secondTimestamps) => () => (0, _jestMatcherUtils.matcherHint)('.not.toHaveBeenCalledBefore') + '\n\n' + 'Expected first mock to not have been called before, timestamps:\n' + `  ${(0, _jestMatcherUtils.printExpected)(firsTimestamps)}\n` + 'Received second mock with timestamps:\n' + `  ${(0, _jestMatcherUtils.printReceived)(secondTimestamps)}`;

const failMessage = (firsTimestamps, secondTimestamps) => () => (0, _jestMatcherUtils.matcherHint)('.toHaveBeenCalledBefore') + '\n\n' + 'Expected first mock to have been called before, timestamps:\n' + `  ${(0, _jestMatcherUtils.printExpected)(firsTimestamps)}\n` + 'Received second mock with timestamps:\n' + `  ${(0, _jestMatcherUtils.printReceived)(secondTimestamps)}`;

exports.default = {
  toHaveBeenCalledBefore: (firstMock, secondMock) => {
    const firsTimestamps = firstMock.mock.timestamps;
    const secondTimestamps = secondMock.mock.timestamps;
    const pass = (0, _predicate2.default)(firstMock.mock.timestamps, secondTimestamps);
    if (pass) {
      return { pass: true, message: passMessage(firsTimestamps, secondTimestamps) };
    }

    return { pass: false, message: failMessage(firsTimestamps, secondTimestamps) };
  }
};